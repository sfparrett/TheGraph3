// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Swap extends ethereum.Event {
  get params(): Swap__Params {
    return new Swap__Params(this);
  }
}

export class Swap__Params {
  _event: Swap;

  constructor(event: Swap) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get input(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get output(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Swappa_Test extends ethereum.SmartContract {
  static bind(address: Address): Swappa_Test {
    return new Swappa_Test("Swappa_Test", address);
  }

  swapTest(): BigInt {
    let result = super.call("swapTest", "swapTest():(uint256)", []);

    return result[0].toBigInt();
  }

  try_swapTest(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("swapTest", "swapTest():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class SwapTestCall extends ethereum.Call {
  get inputs(): SwapTestCall__Inputs {
    return new SwapTestCall__Inputs(this);
  }

  get outputs(): SwapTestCall__Outputs {
    return new SwapTestCall__Outputs(this);
  }
}

export class SwapTestCall__Inputs {
  _call: SwapTestCall;

  constructor(call: SwapTestCall) {
    this._call = call;
  }
}

export class SwapTestCall__Outputs {
  _call: SwapTestCall;

  constructor(call: SwapTestCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
